# This is a basic workflow to help you get started with Actions

name: buildx for dockerhub

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: shtripok/pictshare
  DOCKER_REGISTRY_USERNAME: shtripok
  # DOCKERHUB_TOKEN should be set in "secrets" property of github repository
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildx:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - 
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
        
      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKER_REGISTRY_USERNAME --password-stdin

      -
        name: Run Buildx
        run: |
          IMAGE_ID=$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --tag $IMAGE_ID:$VERSION \
            --push \
            --file Dockerfile . 

